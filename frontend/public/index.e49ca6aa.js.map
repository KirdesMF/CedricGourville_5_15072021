{"mappings":"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","sources":["node_modules/@babel/runtime/helpers/asyncToGenerator.js","src/js/utils/utils.js","src/js/utils/local-storage.js","src/js/utils/fetch.js","src/js/views/Category.js","src/js/components/Links.js","src/js/views/Home.js","src/js/views/Product.js","src/js/components/FormCart.js","src/js/components/TableCart.js","src/js/views/ShoppingCart.js","src/js/router/router.js","src/js/views/Success.js","src/js/views/Error404.js"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/**\n *\n * @param {number} price\n * @returns string\n * @description transform number to a string in Euro\n */\nexport function formatPrice(price) {\n   return new Intl.NumberFormat('fr-FR', {\n      style: 'currency',\n      currency: 'EUR',\n   }).format(price / 100);\n}\n\nconst options = {\n   teddies: 'colors',\n   cameras: 'lenses',\n   furniture: 'varnish',\n};\n\n/**\n *\n * @param {keyof options} category\n * @returns string\n * @description used to get the options array\n */\nexport function getOptionsFromDatas(category) {\n   return options[category];\n}\n\n/**\n *\n * @param {string} text\n *\n */\nexport function parseStringToNumber(text) {\n   return parseInt(text, 10);\n}\n\n/**\n *\n * @param {string} pathname\n */\nexport function setPathToCategory(pathname) {\n   if (pathname === '/') return 'all';\n   return pathname.split('/')[1];\n}\n","/**\n * @typedef {object} Product\n * @property {number} quantity\n * @property {string} category\n * @property {string} name\n * @property {string} [price]\n * @property {string} id\n * @property {string} option\n **/\n\n/**\n *\n * @param {string} category\n * @returns {([] | Product[])}\n */\nfunction getProductFromCategory(category) {\n   return JSON.parse(localStorage.getItem(category)) || [];\n}\n\n/**\n *\n * @param {Product} product\n *\n */\nfunction addItem(product) {\n   const { category, name, quantity, option } = product;\n\n   const items = getProductFromCategory(category);\n   const item = items.find((i) => i.name === name && i.option === option);\n\n   if (!item) items.push(product);\n\n   if (item && item.quantity < 10) {\n      item.quantity += quantity;\n   }\n\n   if (item && item.quantity >= 10) {\n      item.quantity = 10;\n      alert('10 max bro');\n   }\n\n   localStorage.setItem(category, JSON.stringify(items));\n}\n\nfunction updateItem(product) {\n   const { category, name, quantity, option } = product;\n\n   const items = getProductFromCategory(category);\n   const item = items.find((i) => i.name === name && i.option === option);\n\n   item.quantity = quantity;\n\n   localStorage.setItem(category, JSON.stringify(items));\n}\n\n/**\n *\n * @param {Product} product\n *\n */\nfunction removeItem(product) {\n   const { category, name, option } = product;\n   const items = getProductFromCategory(category);\n\n   const item = items.find((i) => i.name === name && i.option === option);\n\n   const cleanedItems = items.filter(\n      (el) => el.name != item.name || el.option != item.option\n   );\n\n   localStorage.setItem(category, JSON.stringify(cleanedItems));\n}\n\nfunction clear() {\n   localStorage.clear();\n}\n\nfunction cleanCategory(category) {\n   localStorage.removeItem(category);\n}\n\nexport const useStorage = {\n   clear,\n   addItem,\n   updateItem,\n   removeItem,\n   getProductFromCategory,\n   cleanCategory,\n};\n","import { useStorage } from './local-storage';\n\n/**\n *\n * @param {string} category\n * @returns\n */\nexport async function getAllProductsFromAPI(category) {\n   try {\n      const res = await fetch(`${process.env.HOST}/api/${category}`);\n      if (!res.ok) {\n         console.log(res.status);\n         return;\n      }\n\n      return res.json();\n   } catch (err) {\n      console.log(err);\n   }\n}\n\n/**\n *\n * @param {string} category\n * @param {string} id\n * @returns\n */\nexport async function getProductFromAPI(category, id) {\n   const url = `${process.env.HOST}/api/${category}/${id}`;\n   try {\n      const res = await fetch(url);\n\n      if (!res.ok) {\n         console.log(res.status);\n\n         return;\n      }\n\n      return res.json();\n   } catch (err) {\n      console.log(err);\n   }\n}\n\n/**\n *\n * @param {string} category\n * @param {object} order\n */\nexport function postOrder(category, order) {\n   fetch(`${process.env.HOST}/api/${category}/order`, {\n      method: 'POST',\n      body: JSON.stringify(order),\n      headers: { 'Content-Type': 'application/json; charset=utf-8' },\n   })\n      .then((res) => res.json())\n      .then((json) => {\n         sessionStorage.setItem('orderId', json.orderId);\n         useStorage.cleanCategory(category);\n\n         window.history.pushState({ category }, '', `/${category}/success`);\n\n         const customEvent = new Event('update');\n         window.dispatchEvent(customEvent);\n      })\n      .catch((err) => alert(err));\n}\n","import { getAllProductsFromAPI } from '../utils/fetch';\nimport { formatPrice } from '../utils/utils';\n\n/**\n *\n * @param {*} datas\n * @param {string} category\n * @returns\n */\nconst Cards = (datas, category) => {\n   return datas\n      .map((data) => {\n         const { _id, name, price, imageUrl } = data;\n         const href = `/${category}?id=${_id}`;\n\n         return /*html */ `\n            <a href=\"${href}\" data-router class=\"article__card\">\n               <img width=\"320\" height=\"240\" src=\"${imageUrl}\" />\n               <div>\n                  <h2>${name}</h2>\n                  <small>${formatPrice(price)}</small>\n               </div>\n            </a>\n         `;\n      })\n      .join('');\n};\n\nexport const Category = {\n   render: async () => {\n      const category = window.history.state.category;\n      const datas = await getAllProductsFromAPI(category);\n      const cards = Cards(datas, category);\n\n      return /* html */ `\n         <section class=\"article panel h100 grid grid-center\">\n            <div class=\"wrapper grid-flow\" id=\"myContainer\">\n               <div>\n                  <h1>${category}</h1>\n                  <a href=\"/\" data-router>Back</a>\n               </div>\n               <div class=\"article__grid\">${cards}</div>\n            </div>\n         </section>\n      `;\n   },\n};\n","const LINKS_DATA = [\n   { path: '/teddies', text: 'Teddies', icon: '#teddy-icon' },\n   { path: '/cameras', text: 'Cameras', icon: '#camera-icon' },\n   { path: '/furniture', text: 'Furnitures', icon: '#furniture-icon' },\n];\n\nexport const Link = LINKS_DATA.map(\n   (link) => `\n      <a href=\"${link.path}\" data-router=\"true\">\n         ${link.text}\n         <span>\n            <svg\n               class=\"svg-icon\"\n               focusable=\"false\"\n               role=\"img\"\n               aria-hidden=\"true\"\n            >\n               <use href=\"${link.icon}\" />\n            </svg>\n         </span>\n      </a>\n   `\n).join('');\n\nexport const LinkMenu = LINKS_DATA.map(\n   (link) => `\n      <a href=\"${link.path}\" data-router=\"true\">\n         ${link.text}\n      </a>\n   `\n).join('');\n","import { Link } from '../components/Links';\n\nexport const Home = {\n   render: () => {\n      return /* html */ `\n         <section class=\"home panel h100\">\n            <nav class=\"home__nav wrapper h100\">\n               ${Link}\n            </nav>\n         </section>\n      `;\n   },\n};\n","import { getProductFromAPI } from '../utils/fetch';\nimport { useStorage } from '../utils/local-storage';\nimport { formatPrice, getOptionsFromDatas } from '../utils/utils';\n\nexport const Product = {\n   render: async () => {\n      const href = window.location.href;\n      const id = new URL(href).searchParams.get('id');\n      const category = window.history.state.category;\n\n      const keyOptions = getOptionsFromDatas(category);\n      const datas = await getProductFromAPI(category, id);\n      const formatedPrice = formatPrice(datas.price);\n\n      const options = datas[keyOptions].map(\n         (d) => `<option value=\"${d}\">${d}</option>`\n      );\n\n      return /*html */ `\n         <section class=\"product panel\" >\n            <div class=\"wrapper\">\n               <div class=\"product__inner\" >\n                  <img \n                     src=\"${datas.imageUrl}\"\n                     alt=\"${datas.description}\"\n                     data-name=\"${datas.name}\"\n                     data-id=\"${datas._id}\" \n                     data-price=\"${datas.price}\"\n                  />\n                  <div class=\"product__content\" >\n                     <h1>${datas.name}</h1>\n                     <a href=\"/${category}\" data-router>Back</a>\n                     <p>${datas.description}</p>\n                     <b>\n                        ${formatedPrice}\n                     </b>\n                     <select data-cart=\"options\" >\n                        ${options}\n                     </select>\n                     <button data-cart=\"btn\" >Add to cart</button>\n                  </div>\n               </div>\n            </div>\n         </section>\n      `;\n   },\n\n   set: () => {\n      const btn = document.querySelector(`[data-cart=\"btn\"]`);\n      const select = document.querySelector(`[data-cart=\"options\"]`);\n      const product = document.querySelector('[data-id]');\n      const category = window.history.state.category;\n\n      btn.addEventListener('click', (e) => {\n         e.preventDefault();\n\n         const datas = {\n            category: category,\n            id: product.dataset.id,\n            name: product.dataset.name,\n            price: product.dataset.price,\n            quantity: 1,\n            option: select.value,\n         };\n\n         useStorage.addItem(datas);\n      });\n   },\n};\n","import { postOrder } from '../utils/fetch';\nimport { useStorage } from '../utils/local-storage';\n\nconst INPUTS = [\n   { type: 'text', id: 'firstName', label: 'First Name' },\n   { type: 'text', id: 'lastName', label: 'Last Name' },\n   { type: 'text', id: 'address', label: 'Address' },\n   { type: 'text', id: 'city', label: 'City' },\n   { type: 'text', id: 'zip', label: 'Zip Code' },\n   { type: 'email', id: 'email', label: 'Email' },\n];\n\nexport const FormCart = {\n   render: async () => {\n      return /*html */ `\n         <form action=\"/success\" method=\"POST\"  class=\"grid-flow form-cart\">\n            ${INPUTS.map((input) => {\n               return /*html */ `\n                  <div>\n                     <label for=\"${input.id}\" >${input.label} *</label>\n                     <input type=\"${input.type}\" id=\"${input.id}\" name=\"${input.id}\" required />\n                  </div>\n               `;\n            }).join('')}\n            <input type=\"submit\" value=\"Command\">\n         </form>\n      `;\n   },\n   /**\n    *\n    * @param {Product[] | []} datas\n    * @param {string} category\n    * @returns\n    */\n   set: (category, datas) => {\n      const form = document.querySelector('form');\n      const products = datas.map((d) => d.id);\n      const total = datas\n         .map((d) => d.quantity * Number(d.price))\n         .reduce((a, b) => a + b, 0);\n\n      const inputs = document.querySelectorAll('form input');\n\n      const firstName = document.getElementById('firstName');\n      const lastName = document.getElementById('lastName');\n      const email = document.getElementById('email');\n      const city = document.getElementById('city');\n      const address = document.getElementById('address');\n      const zip = document.getElementById('zip');\n\n      form.addEventListener('submit', (e) => {\n         e.preventDefault();\n\n         const order = {\n            contact: {\n               firstName: firstName.value,\n               lastName: lastName.value,\n               address: `${address.value} ${zip.value}`,\n               city: city.value,\n               email: email.value,\n            },\n            products: products,\n         };\n\n         postOrder(category, order);\n         sessionStorage.setItem(`${category}-total`, total);\n      });\n   },\n};\n","import { useStorage } from '../utils/local-storage';\nimport { formatPrice, parseStringToNumber } from '../utils/utils';\n/**\n * @typedef {object} Product\n * @property {number} quantity\n * @property {string} category\n * @property {string} name\n * @property {string} price\n * @property {string} id\n * @property {string} option\n **/\n\n/**\n *\n * @param {number} quantity\n * @returns\n */\nconst Select = (quantity) => {\n   return /* html */ `\n      <select data-cart=\"select\" >\n         ${Array.from({ length: 10 }, (_, k) => {\n            const selected = quantity === k + 1 ? 'selected' : '';\n            return `\n               <option ${selected} value=\"${k + 1}\" >\n                  ${k + 1}\n               </option>\n            `;\n         }).join('')}\n      </select>\n   `;\n};\n\nexport const TableCart = {\n   /**\n    *\n    * @param {Product[]} datas\n    * @param {string} category\n    * @returns\n    */\n   render: async (category, datas) => {\n      const total = datas\n         .map((d) => d.quantity * Number(d.price))\n         .reduce((a, b) => a + b, 0);\n\n      const rows = datas\n         .map((data) => {\n            const { quantity, price, id, name, option, category } = data;\n            const totalPrice = quantity * Number(price);\n            const href = `/${category}?id=${id}`;\n            const select = Select(quantity);\n\n            return /* html */ `\n               <tr data-category=\"${category}\" data-id=\"${id}\" data-name=\"${name}\" data-option=\"${option}\" data-quantity=\"${quantity}\" >\n                  <td>\n                     <a href=\"${href}\" data-router >${name}</a>\n                  </td>\n                  <td>${option}</td>\n                  <td>${quantity}</td>\n                  <td>${formatPrice(price)}</td>\n                  <td>${select}</td>\n                  <td>${formatPrice(totalPrice)}</td>\n                  <td>\n                     <button data-cart=\"remove\">\n                        <span>\n                           <svg\n                              class=\"svg-icon\"\n                              focusable=\"false\"\n                              role=\"img\"\n                              aria-hidden=\"true\"\n                           >\n                              <use href=\"#trash-icon\" />\n                           </svg>\n                        </span>\n                     </button>\n                  </td>\n               </tr>\n            `;\n         })\n         .join('');\n\n      if (!datas.length) return;\n\n      return /*html */ `\n         <table>\n            <thead>\n               <tr>\n                  <th colspan=\"100\">Shopping Cart ${category}</th>\n               </tr>\n            </thead>\n            <tbody>\n               ${rows}\n            </tbody>\n            <tfoot>\n               <tr>\n                  <th colspan=\"90\">Total</th>\n                  <td>${formatPrice(total)}</td>\n               </tr>\n            </tfoot>\n         </table>\n      `;\n   },\n   /**\n    *\n    * @param {Product[] | []} datas\n    * @param {string} category\n    * @returns\n    */\n   set: () => {\n      const rows = document.querySelectorAll('tr[data-id]');\n\n      for (const row of rows) {\n         row.addEventListener('change', (event) => {\n            if (event.target.matches('[data-cart=\"select\"]')) {\n               const select = event.target;\n\n               const datas = {\n                  category: row.dataset.category,\n                  id: row.dataset.id,\n                  name: row.dataset.name,\n                  option: row.dataset.option,\n                  quantity: parseStringToNumber(select.value),\n               };\n\n               useStorage.updateItem(datas);\n\n               const customEvent = new Event('update');\n               window.dispatchEvent(customEvent);\n            }\n         });\n\n         row.addEventListener('click', (event) => {\n            if (event.target.matches('[data-cart=\"remove\"]')) {\n               const datas = {\n                  category: row.dataset.category,\n                  id: row.dataset.id,\n                  name: row.dataset.name,\n                  option: row.dataset.option,\n               };\n\n               useStorage.removeItem(datas);\n\n               const customEvent = new Event('update');\n               window.dispatchEvent(customEvent);\n            }\n         });\n      }\n   },\n};\n","import { FormCart } from '../components/FormCart';\nimport { TableCart } from '../components/TableCart';\nimport { useStorage } from '../utils/local-storage';\n\nconst EmptyCart = (category) => {\n   return /* html */ `\n      <div>\n         <h1>YOUR ${category} CART IS EMPTY</h1>\n         <a data-router href=\"/${category === 'all' ? '' : category}\">Back</a>\n      </div>\n   `;\n};\n\nconst HomeCart = async () => {\n   const keys = Object.keys(localStorage);\n   const values = Object.values(localStorage);\n\n   if (values.every((v) => v === '[]')) return EmptyCart('all');\n\n   const promises = keys.map(async (category) => {\n      const datas = useStorage.getProductFromCategory(category);\n\n      return TableCart.render(category, datas);\n   });\n\n   const home = await Promise.all(promises);\n\n   return /* html */ `\n      <section class=\"shopping-cart panel h100 grid-flow grid-center\">\n         ${home.join('')}\n      </section>\n   `;\n};\n\nexport const ShoppingCart = {\n   render: async function () {\n      const category = window.history.state.category;\n      const datas = useStorage.getProductFromCategory(category);\n\n      const table = await TableCart.render(category, datas);\n      const form = await FormCart.render();\n\n      if (category === 'all') return HomeCart();\n      if (!datas.length) return EmptyCart(category);\n\n      return /* html */ `\n         <section class=\"shopping-cart panel h100 grid-flow grid-center\">\n            ${table}\n         </section>\n         <section class=\"panel\">${form}</section>\n      `;\n   },\n   set: function () {\n      const category = window.history.state.category;\n      const datas = useStorage.getProductFromCategory(category);\n\n      if (category === 'all') TableCart.set();\n      if (!datas.length) return;\n\n      FormCart.set(category, datas);\n      TableCart.set();\n   },\n};\n","import { parseStringToNumber, setPathToCategory } from '../utils/utils';\nimport { Category } from '../views/Category';\nimport { Error404 } from '../views/Error404';\nimport { Home } from '../views/Home';\nimport { Product } from '../views/Product';\nimport { ShoppingCart } from '../views/ShoppingCart';\nimport { Success } from '../views/Success';\n\nconst routes = [\n   { path: '/', component: Home, title: 'Oricono - Home' },\n   { path: '/teddies', component: Category, title: 'Oricono - Teddies' },\n   { path: '/cameras', component: Category, title: 'Oricono - Cameras' },\n   { path: '/furniture', component: Category, title: 'Oricono - Furniture' },\n   { path: '/product', component: Product, title: 'Oricono - Product' },\n   {\n      path: '/shopping-cart',\n      component: ShoppingCart,\n      title: 'Oricono - Shopping Cart ',\n   },\n   { path: '/success', component: Success, title: 'Orinoco - Success' },\n   { path: '/error', component: Error404, title: 'Orinoco - Error' },\n];\n\nfunction updateLinkShoppingCart() {\n   const link = document.querySelector('#shopping-link');\n   const category = history.state.category;\n   const info = document.querySelector('[data-cart=\"info\"]');\n\n   link.setAttribute('href', `/${category}/shopping-cart`);\n}\n\nasync function setHistoryCategory() {\n   const path = window.location.pathname;\n   const category = setPathToCategory(path);\n\n   window.history.pushState({ category: category }, '');\n}\n\n//TODO improve how to handle transition\n/**\n *\n * @param {() => void} onFinish\n */\nfunction transitionView(onFinish) {\n   const app = document.getElementById('app');\n\n   const transition = getComputedStyle(app).getPropertyValue('--transition');\n\n   const add = () => app.classList.add('transition');\n   const remove = () => app.classList.remove('transition');\n\n   add();\n\n   setTimeout(() => {\n      onFinish();\n      remove();\n   }, parseStringToNumber(transition));\n}\n\nconst navigate = (event) => {\n   event.preventDefault();\n\n   const href = event.target.getAttribute('href');\n   const category = setPathToCategory(event.target.pathname);\n\n   if (location.href === event.target.href) return;\n\n   transitionView(() => {\n      window.history.pushState({ category: category }, '', href);\n      rerender();\n   });\n};\n\nfunction setLinkRouter() {\n   const anchors = document.querySelectorAll(`[data-router]`);\n\n   anchors.forEach((anchor) => {\n      const hasEvent = anchor.hasAttribute('data-event');\n\n      if (hasEvent) return;\n\n      anchor.addEventListener('click', navigate);\n      anchor.setAttribute('data-event', 'true');\n   });\n}\n\n//TODO improve render view check string\nasync function renderView() {\n   const app = document.getElementById('app');\n   const path = window.location.pathname;\n   const href = window.location.href;\n\n   const { component, title } = routes.find((route) => {\n      if (href.includes('?id=')) {\n         return route.path === '/product';\n      }\n\n      if (path.includes('/shopping-cart')) {\n         return route.path === '/shopping-cart';\n      }\n\n      if (path.includes('/success')) {\n         return route.path === '/success';\n      }\n\n      return route.path === path || route.path === '/error';\n   });\n\n   app.innerHTML = await component.render();\n   if ('set' in component) component.set();\n   document.title = title;\n}\n\nasync function init() {\n   await setHistoryCategory();\n   await renderView();\n   setLinkRouter();\n   updateLinkShoppingCart();\n}\n\nasync function rerender() {\n   await renderView();\n   setLinkRouter();\n   updateLinkShoppingCart();\n}\n\n['popstate', 'update'].forEach((event) =>\n   window.addEventListener(event, rerender)\n);\n\nwindow.addEventListener('load', init);\n","import { formatPrice } from '../utils/utils';\n\nexport const Success = {\n   render: () => {\n      const category = history.state.category;\n      const orderId = sessionStorage.getItem('orderId');\n      const total = sessionStorage.getItem(`${category}-total`);\n\n      return /*html */ `\n         <section>\n            <h2>MERCI</h2>\n            <p>${orderId}</p>\n            <p>${formatPrice(total)}</p>\n            <a href=\"/\" data-router=\"true\" >Retour</a>\n         </section>\n      `;\n   },\n};\n","export const Error404 = {\n   render: () => {\n      return /* html */ `\n         <section class=\"panel\">\n           <div class=\"wrapper\">\n            <a href=\"/\" data-router=\"true\">Error you should go back</a>\n           </div>\n         </section>\n      `;\n   },\n};\n"],"names":["$6b7051dbaf5d76cbb82660e09c13c033$var$asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","formatPrice","price","Intl","NumberFormat","style","currency","format","$6b7051dbaf5d76cbb82660e09c13c033$exports","fn","self","this","args","arguments","apply","err","undefined","__esModule","options","teddies","cameras","furniture","parseStringToNumber","text","parseInt","setPathToCategory","pathname","split","getProductFromCategory","category","JSON","parse","localStorage","getItem","useStorage","clear","product","name","quantity","option","items","item","find","i","push","alert","setItem","stringify","cleanedItems","filter","el","removeItem","res","fetch","concat","ok","json","console","log","status","id","url","_render","Category","render","$parcel$interopDefault","window","history","state","cards","datas","map","data","_id","imageUrl","href","join","Cards","_x","$e280711ac9bab138c47b85efdec703d3$var$_getAllProductsFromAPI","getAllProductsFromAPI","LINKS_DATA","path","icon","Link","link","Home","Product","location","URL","searchParams","get","keyOptions","getOptionsFromDatas","_x2","_x3","$e280711ac9bab138c47b85efdec703d3$var$_getProductFromAPI","getProductFromAPI","formatedPrice","d","description","set","btn","document","querySelector","select","addEventListener","e","preventDefault","dataset","addItem","INPUTS","type","label","FormCart","input","form","products","total","Number","reduce","a","b","firstName","querySelectorAll","getElementById","lastName","email","city","address","zip","order","contact","method","body","headers","sessionStorage","orderId","cleanCategory","pushState","customEvent","Event","dispatchEvent","catch","postOrder","TableCart","rows","totalPrice","Array","from","length","_","k","_loop","row","event","target","matches","updateItem","EmptyCart","HomeCart","_ref","keys","Object","values","every","v","promises","_ref2","home","all","routes","component","title","table","updateLinkShoppingCart","setAttribute","setHistoryCategory","transitionView","onFinish","app","transition","getComputedStyle","getPropertyValue","classList","add","setTimeout","remove","navigate","getAttribute","rerender","setLinkRouter","forEach","anchor","hasAttribute","renderView","route","includes","innerHTML"],"version":3,"file":"index.e49ca6aa.js.map"}